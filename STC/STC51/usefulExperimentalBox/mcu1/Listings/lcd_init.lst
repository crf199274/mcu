C51 COMPILER V9.60.7.0   LCD_INIT                                                          04/26/2023 01:52:59 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD_INIT
OBJECT MODULE PLACED IN .\Objects\lcd_init.obj
COMPILER INVOKED BY: E:\software\keil5_v5\C51\BIN\C51.EXE LCD\lcd_init.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\functio
                    -nSwitching;.\function1;.\LCD;.\Delay;.\ADC;.\function2;.\function3) DEBUG OBJECTEXTEND PRINT(.\Listings\lcd_init.lst) TA
                    -BS(2) OBJECT(.\Objects\lcd_init.obj)

line level    source

   1          #include "lcd_init.h"
   2          
   3          /******************************************************************************
   4                函数说明：LCD串行数据写入函数
   5                入口数据：dat  要写入的串行数据
   6                返回值：  无
   7          ******************************************************************************/
   8          void LCD_Writ_Bus(unsigned char dat) 
   9          { 
  10   1        unsigned char i;
  11   1        LCD_CS_Clr();
  12   1        for(i=0;i<8;i++)
  13   1        {       
  14   2          LCD_SCLK_Clr();
  15   2          if(dat&0x80)
  16   2          {
  17   3             LCD_MOSI_Set();
  18   3          }
  19   2          else
  20   2          {
  21   3             LCD_MOSI_Clr();
  22   3          }
  23   2          LCD_SCLK_Set();
  24   2          dat<<=1;
  25   2        } 
  26   1        LCD_CS_Set(); 
  27   1      }
  28          
  29          
  30          /******************************************************************************
  31                函数说明：LCD写入数据
  32                入口数据：dat 写入的数据
  33                返回值：  无
  34          ******************************************************************************/
  35          void LCD_WR_DATA8(unsigned char dat)
  36          {
  37   1        LCD_Writ_Bus(dat);
  38   1      }
  39          
  40          
  41          /******************************************************************************
  42                函数说明：LCD写入数据
  43                入口数据：dat 写入的数据
  44                返回值：  无
  45          ******************************************************************************/
  46          void LCD_WR_DATA(unsigned int dat)
  47          {
  48   1        LCD_Writ_Bus(dat>>8);
  49   1        LCD_Writ_Bus(dat);
  50   1      }
  51          
  52          
  53          /******************************************************************************
C51 COMPILER V9.60.7.0   LCD_INIT                                                          04/26/2023 01:52:59 PAGE 2   

  54                函数说明：LCD写入命令
  55                入口数据：dat 写入的命令
  56                返回值：  无
  57          ******************************************************************************/
  58          void LCD_WR_REG(unsigned char dat)
  59          {
  60   1        LCD_DC_Clr();//写命令
  61   1        LCD_Writ_Bus(dat);
  62   1        LCD_DC_Set();//写数据
  63   1      }
  64          
  65          
  66          /******************************************************************************
  67                函数说明：设置起始和结束地址
  68                入口数据：x1,x2 设置列的起始和结束地址
  69                          y1,y2 设置行的起始和结束地址
  70                返回值：  无
  71          ******************************************************************************/
  72          void LCD_Address_Set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
  73          {
  74   1        if(USE_HORIZONTAL==0)
  75   1        {
  76   2          LCD_WR_REG(0x2a);//列地址设置
  77   2          LCD_WR_DATA(x1+X_OFFSET);
  78   2          LCD_WR_DATA(x2+X_OFFSET);
  79   2          LCD_WR_REG(0x2b);//行地址设置
  80   2          LCD_WR_DATA(y1+Y_OFFSET);
  81   2          LCD_WR_DATA(y2+Y_OFFSET);
  82   2          LCD_WR_REG(0x2c);//储存器写
  83   2        }
  84   1        else if(USE_HORIZONTAL==1)
  85   1        {
  86   2          LCD_WR_REG(0x2a);//列地址设置
  87   2          LCD_WR_DATA(x1+X_OFFSET);
  88   2          LCD_WR_DATA(x2+X_OFFSET);
  89   2          LCD_WR_REG(0x2b);//行地址设置
  90   2          LCD_WR_DATA(y1+Y_OFFSET);
  91   2          LCD_WR_DATA(y2+Y_OFFSET);
  92   2          LCD_WR_REG(0x2c);//储存器写
  93   2        }
  94   1        else if(USE_HORIZONTAL==2)
  95   1        {
  96   2          LCD_WR_REG(0x2a);//列地址设置
  97   2          LCD_WR_DATA(x1+Y_OFFSET);
  98   2          LCD_WR_DATA(x2+Y_OFFSET);
  99   2          LCD_WR_REG(0x2b);//行地址设置
 100   2          LCD_WR_DATA(y1+X_OFFSET);
 101   2          LCD_WR_DATA(y2+X_OFFSET);
 102   2          LCD_WR_REG(0x2c);//储存器写
 103   2        }
 104   1        else
 105   1        {
 106   2          LCD_WR_REG(0x2a);//列地址设置
 107   2          LCD_WR_DATA(x1+Y_OFFSET);
 108   2          LCD_WR_DATA(x2+Y_OFFSET);
 109   2          LCD_WR_REG(0x2b);//行地址设置
 110   2          LCD_WR_DATA(y1+X_OFFSET);
 111   2          LCD_WR_DATA(y2+X_OFFSET);
 112   2          LCD_WR_REG(0x2c);//储存器写
 113   2        }
 114   1      }
 115          
C51 COMPILER V9.60.7.0   LCD_INIT                                                          04/26/2023 01:52:59 PAGE 3   

 116          void LCD_Init(void)
 117          {
 118   1        LCD_RES_Clr();//复位
 119   1        Delay100ms();
 120   1        LCD_RES_Set();
 121   1        Delay100ms();
 122   1        
 123   1        LCD_BLK_Set();//打开背光
 124   1        Delay100ms();
 125   1        
 126   1        LCD_WR_REG(0x11);     //Sleep out
 127   1        Delay120ms();                //Delay 120ms
 128   1        LCD_WR_REG(0xB1);     //Normal mode
 129   1        LCD_WR_DATA8(0x05);   
 130   1        LCD_WR_DATA8(0x3C);   
 131   1        LCD_WR_DATA8(0x3C);   
 132   1        LCD_WR_REG(0xB2);     //Idle mode
 133   1        LCD_WR_DATA8(0x05);   
 134   1        LCD_WR_DATA8(0x3C);   
 135   1        LCD_WR_DATA8(0x3C);   
 136   1        LCD_WR_REG(0xB3);     //Partial mode
 137   1        LCD_WR_DATA8(0x05);   
 138   1        LCD_WR_DATA8(0x3C);   
 139   1        LCD_WR_DATA8(0x3C);   
 140   1        LCD_WR_DATA8(0x05);   
 141   1        LCD_WR_DATA8(0x3C);   
 142   1        LCD_WR_DATA8(0x3C);   
 143   1        LCD_WR_REG(0xB4);     //Dot inversion
 144   1        LCD_WR_DATA8(0x03);   
 145   1        LCD_WR_REG(0xC0);     //AVDD GVDD
 146   1        LCD_WR_DATA8(0xAB);   
 147   1        LCD_WR_DATA8(0x0B);   
 148   1        LCD_WR_DATA8(0x04);   
 149   1        LCD_WR_REG(0xC1);     //VGH VGL
 150   1        LCD_WR_DATA8(0xC5);   //C0
 151   1        LCD_WR_REG(0xC2);     //Normal Mode
 152   1        LCD_WR_DATA8(0x0D);   
 153   1        LCD_WR_DATA8(0x00);   
 154   1        LCD_WR_REG(0xC3);     //Idle
 155   1        LCD_WR_DATA8(0x8D);   
 156   1        LCD_WR_DATA8(0x6A);   
 157   1        LCD_WR_REG(0xC4);     //Partial+Full
 158   1        LCD_WR_DATA8(0x8D);   
 159   1        LCD_WR_DATA8(0xEE);   
 160   1        LCD_WR_REG(0xC5);     //VCOM
 161   1        LCD_WR_DATA8(0x0F);   
 162   1        LCD_WR_REG(0xE0);     //positive gamma
 163   1        LCD_WR_DATA8(0x07);   
 164   1        LCD_WR_DATA8(0x0E);   
 165   1        LCD_WR_DATA8(0x08);   
 166   1        LCD_WR_DATA8(0x07);   
 167   1        LCD_WR_DATA8(0x10);   
 168   1        LCD_WR_DATA8(0x07);   
 169   1        LCD_WR_DATA8(0x02);   
 170   1        LCD_WR_DATA8(0x07);   
 171   1        LCD_WR_DATA8(0x09);   
 172   1        LCD_WR_DATA8(0x0F);   
 173   1        LCD_WR_DATA8(0x25);   
 174   1        LCD_WR_DATA8(0x36);   
 175   1        LCD_WR_DATA8(0x00);   
 176   1        LCD_WR_DATA8(0x08);   
 177   1        LCD_WR_DATA8(0x04);   
C51 COMPILER V9.60.7.0   LCD_INIT                                                          04/26/2023 01:52:59 PAGE 4   

 178   1        LCD_WR_DATA8(0x10);   
 179   1        LCD_WR_REG(0xE1);     //negative gamma
 180   1        LCD_WR_DATA8(0x0A);   
 181   1        LCD_WR_DATA8(0x0D);   
 182   1        LCD_WR_DATA8(0x08);   
 183   1        LCD_WR_DATA8(0x07);   
 184   1        LCD_WR_DATA8(0x0F);   
 185   1        LCD_WR_DATA8(0x07);   
 186   1        LCD_WR_DATA8(0x02);   
 187   1        LCD_WR_DATA8(0x07);   
 188   1        LCD_WR_DATA8(0x09);   
 189   1        LCD_WR_DATA8(0x0F);   
 190   1        LCD_WR_DATA8(0x25);   
 191   1        LCD_WR_DATA8(0x35);   
 192   1        LCD_WR_DATA8(0x00);   
 193   1        LCD_WR_DATA8(0x09);   
 194   1        LCD_WR_DATA8(0x04);   
 195   1        LCD_WR_DATA8(0x10);
 196   1           
 197   1        LCD_WR_REG(0xFC);    
 198   1        LCD_WR_DATA8(0x80);  
 199   1          
 200   1        LCD_WR_REG(0x3A);     
 201   1        LCD_WR_DATA8(0x05);   
 202   1        LCD_WR_REG(0x36);
 203   1        if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x08);
 204   1        else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC8);
 205   1        else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x78);
 206   1        else LCD_WR_DATA8(0xA8);   
 207   1        LCD_WR_REG(0x21);     //Display inversion
 208   1        LCD_WR_REG(0x29);     //Display on
 209   1        LCD_WR_REG(0x2A);     //Set Column Address
 210   1        LCD_WR_DATA8(0x00);   
 211   1        LCD_WR_DATA8(0x1A);  //26  
 212   1        LCD_WR_DATA8(0x00);   
 213   1        LCD_WR_DATA8(0x69);   //105 
 214   1        LCD_WR_REG(0x2B);     //Set Page Address
 215   1        LCD_WR_DATA8(0x00);   
 216   1        LCD_WR_DATA8(0x01);    //1
 217   1        LCD_WR_DATA8(0x00);   
 218   1        LCD_WR_DATA8(0xA0);    //160
 219   1        LCD_WR_REG(0x2C); 
 220   1      }
 221          
 222          
 223          
 224          
 225          
 226          
 227          
 228          
*** WARNING C294 IN LINE 76 OF LCD\lcd_init.c: unreachable code
*** WARNING C294 IN LINE 86 OF LCD\lcd_init.c: unreachable code
*** WARNING C294 IN LINE 106 OF LCD\lcd_init.c: unreachable code
*** WARNING C294 IN LINE 206 OF LCD\lcd_init.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    550    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   LCD_INIT                                                          04/26/2023 01:52:59 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
