C51 COMPILER V9.60.7.0   LCD_INIT                                                          02/15/2023 04:59:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD_INIT
OBJECT MODULE PLACED IN .\Objects\lcd_init.obj
COMPILER INVOKED BY: E:\software\keil5_v5\C51\BIN\C51.EXE lcd_init.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\lcd_init.lst) TABS(2) OBJECT(.\Objects\lcd_init.obj)

line level    source

   1          #include "lcd_init.h"
   2          
   3          //不准确延时函数
   4          void delay_ms(unsigned int ms)
   5          {                         
   6   1        unsigned int a;
   7   1        while(ms)
   8   1        {
   9   2          a=1800;
  10   2          while(a--);
  11   2          ms--;
  12   2        }
  13   1      }
  14          
  15          
  16          /******************************************************************************
  17                函数说明：LCD串行数据写入函数
  18                入口数据：dat  要写入的串行数据
  19                返回值：  无
  20          ******************************************************************************/
  21          void LCD_Writ_Bus(u8 dat) 
  22          { 
  23   1        u8 i;
  24   1        LCD_CS_Clr();
  25   1        for(i=0;i<8;i++)
  26   1        {       
  27   2          LCD_SCLK_Clr();
  28   2          if(dat&0x80)
  29   2          {
  30   3             LCD_MOSI_Set();
  31   3          }
  32   2          else
  33   2          {
  34   3             LCD_MOSI_Clr();
  35   3          }
  36   2          LCD_SCLK_Set();
  37   2          dat<<=1;
  38   2        } 
  39   1        LCD_CS_Set(); 
  40   1      }
  41          
  42          
  43          /******************************************************************************
  44                函数说明：LCD写入数据
  45                入口数据：dat 写入的数据
  46                返回值：  无
  47          ******************************************************************************/
  48          void LCD_WR_DATA8(u8 dat)
  49          {
  50   1        LCD_Writ_Bus(dat);
  51   1      }
  52          
  53          
  54          /******************************************************************************
C51 COMPILER V9.60.7.0   LCD_INIT                                                          02/15/2023 04:59:37 PAGE 2   

  55                函数说明：LCD写入数据
  56                入口数据：dat 写入的数据
  57                返回值：  无
  58          ******************************************************************************/
  59          void LCD_WR_DATA(u16 dat)
  60          {
  61   1        LCD_Writ_Bus(dat>>8);
  62   1        LCD_Writ_Bus(dat);
  63   1      }
  64          
  65          
  66          /******************************************************************************
  67                函数说明：LCD写入命令
  68                入口数据：dat 写入的命令
  69                返回值：  无
  70          ******************************************************************************/
  71          void LCD_WR_REG(u8 dat)
  72          {
  73   1        LCD_DC_Clr();//写命令
  74   1        LCD_Writ_Bus(dat);
  75   1        LCD_DC_Set();//写数据
  76   1      }
  77          
  78          
  79          /******************************************************************************
  80                函数说明：设置起始和结束地址
  81                入口数据：x1,x2 设置列的起始和结束地址
  82                          y1,y2 设置行的起始和结束地址
  83                返回值：  无
  84          ******************************************************************************/
  85          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
  86          {
  87   1        if(USE_HORIZONTAL==0)
  88   1        {
  89   2          LCD_WR_REG(0x2a);//列地址设置
  90   2          LCD_WR_DATA(x1+X_OFFSET);
  91   2          LCD_WR_DATA(x2+X_OFFSET);
  92   2          LCD_WR_REG(0x2b);//行地址设置
  93   2          LCD_WR_DATA(y1+Y_OFFSET);
  94   2          LCD_WR_DATA(y2+Y_OFFSET);
  95   2          LCD_WR_REG(0x2c);//储存器写
  96   2        }
  97   1        else if(USE_HORIZONTAL==1)
  98   1        {
  99   2          LCD_WR_REG(0x2a);//列地址设置
 100   2          LCD_WR_DATA(x1+X_OFFSET);
 101   2          LCD_WR_DATA(x2+X_OFFSET);
 102   2          LCD_WR_REG(0x2b);//行地址设置
 103   2          LCD_WR_DATA(y1+Y_OFFSET);
 104   2          LCD_WR_DATA(y2+Y_OFFSET);
 105   2          LCD_WR_REG(0x2c);//储存器写
 106   2        }
 107   1        else if(USE_HORIZONTAL==2)
 108   1        {
 109   2          LCD_WR_REG(0x2a);//列地址设置
 110   2          LCD_WR_DATA(x1+Y_OFFSET);
 111   2          LCD_WR_DATA(x2+Y_OFFSET);
 112   2          LCD_WR_REG(0x2b);//行地址设置
 113   2          LCD_WR_DATA(y1+X_OFFSET);
 114   2          LCD_WR_DATA(y2+X_OFFSET);
 115   2          LCD_WR_REG(0x2c);//储存器写
 116   2        }
C51 COMPILER V9.60.7.0   LCD_INIT                                                          02/15/2023 04:59:37 PAGE 3   

 117   1        else
 118   1        {
 119   2          LCD_WR_REG(0x2a);//列地址设置
 120   2          LCD_WR_DATA(x1+Y_OFFSET);
 121   2          LCD_WR_DATA(x2+Y_OFFSET);
 122   2          LCD_WR_REG(0x2b);//行地址设置
 123   2          LCD_WR_DATA(y1+X_OFFSET);
 124   2          LCD_WR_DATA(y2+X_OFFSET);
 125   2          LCD_WR_REG(0x2c);//储存器写
 126   2        }
 127   1      }
 128          
 129          void LCD_Init(void)
 130          {
 131   1        LCD_RES_Clr();//复位
 132   1        delay_ms(100);
 133   1        LCD_RES_Set();
 134   1        delay_ms(100);
 135   1        
 136   1        LCD_BLK_Set();//打开背光
 137   1        delay_ms(100);
 138   1        
 139   1        LCD_WR_REG(0x11);     //Sleep out
 140   1        delay_ms(120);                //Delay 120ms
 141   1        LCD_WR_REG(0xB1);     //Normal mode
 142   1        LCD_WR_DATA8(0x05);   
 143   1        LCD_WR_DATA8(0x3C);   
 144   1        LCD_WR_DATA8(0x3C);   
 145   1        LCD_WR_REG(0xB2);     //Idle mode
 146   1        LCD_WR_DATA8(0x05);   
 147   1        LCD_WR_DATA8(0x3C);   
 148   1        LCD_WR_DATA8(0x3C);   
 149   1        LCD_WR_REG(0xB3);     //Partial mode
 150   1        LCD_WR_DATA8(0x05);   
 151   1        LCD_WR_DATA8(0x3C);   
 152   1        LCD_WR_DATA8(0x3C);   
 153   1        LCD_WR_DATA8(0x05);   
 154   1        LCD_WR_DATA8(0x3C);   
 155   1        LCD_WR_DATA8(0x3C);   
 156   1        LCD_WR_REG(0xB4);     //Dot inversion
 157   1        LCD_WR_DATA8(0x03);   
 158   1        LCD_WR_REG(0xC0);     //AVDD GVDD
 159   1        LCD_WR_DATA8(0xAB);   
 160   1        LCD_WR_DATA8(0x0B);   
 161   1        LCD_WR_DATA8(0x04);   
 162   1        LCD_WR_REG(0xC1);     //VGH VGL
 163   1        LCD_WR_DATA8(0xC5);   //C0
 164   1        LCD_WR_REG(0xC2);     //Normal Mode
 165   1        LCD_WR_DATA8(0x0D);   
 166   1        LCD_WR_DATA8(0x00);   
 167   1        LCD_WR_REG(0xC3);     //Idle
 168   1        LCD_WR_DATA8(0x8D);   
 169   1        LCD_WR_DATA8(0x6A);   
 170   1        LCD_WR_REG(0xC4);     //Partial+Full
 171   1        LCD_WR_DATA8(0x8D);   
 172   1        LCD_WR_DATA8(0xEE);   
 173   1        LCD_WR_REG(0xC5);     //VCOM
 174   1        LCD_WR_DATA8(0x0F);   
 175   1        LCD_WR_REG(0xE0);     //positive gamma
 176   1        LCD_WR_DATA8(0x07);   
 177   1        LCD_WR_DATA8(0x0E);   
 178   1        LCD_WR_DATA8(0x08);   
C51 COMPILER V9.60.7.0   LCD_INIT                                                          02/15/2023 04:59:37 PAGE 4   

 179   1        LCD_WR_DATA8(0x07);   
 180   1        LCD_WR_DATA8(0x10);   
 181   1        LCD_WR_DATA8(0x07);   
 182   1        LCD_WR_DATA8(0x02);   
 183   1        LCD_WR_DATA8(0x07);   
 184   1        LCD_WR_DATA8(0x09);   
 185   1        LCD_WR_DATA8(0x0F);   
 186   1        LCD_WR_DATA8(0x25);   
 187   1        LCD_WR_DATA8(0x36);   
 188   1        LCD_WR_DATA8(0x00);   
 189   1        LCD_WR_DATA8(0x08);   
 190   1        LCD_WR_DATA8(0x04);   
 191   1        LCD_WR_DATA8(0x10);   
 192   1        LCD_WR_REG(0xE1);     //negative gamma
 193   1        LCD_WR_DATA8(0x0A);   
 194   1        LCD_WR_DATA8(0x0D);   
 195   1        LCD_WR_DATA8(0x08);   
 196   1        LCD_WR_DATA8(0x07);   
 197   1        LCD_WR_DATA8(0x0F);   
 198   1        LCD_WR_DATA8(0x07);   
 199   1        LCD_WR_DATA8(0x02);   
 200   1        LCD_WR_DATA8(0x07);   
 201   1        LCD_WR_DATA8(0x09);   
 202   1        LCD_WR_DATA8(0x0F);   
 203   1        LCD_WR_DATA8(0x25);   
 204   1        LCD_WR_DATA8(0x35);   
 205   1        LCD_WR_DATA8(0x00);   
 206   1        LCD_WR_DATA8(0x09);   
 207   1        LCD_WR_DATA8(0x04);   
 208   1        LCD_WR_DATA8(0x10);
 209   1           
 210   1        LCD_WR_REG(0xFC);    
 211   1        LCD_WR_DATA8(0x80);  
 212   1          
 213   1        LCD_WR_REG(0x3A);     
 214   1        LCD_WR_DATA8(0x05);   
 215   1        LCD_WR_REG(0x36);
 216   1        if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x08);
 217   1        else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC8);
 218   1        else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x78);
 219   1        else LCD_WR_DATA8(0xA8);   
 220   1      //  LCD_WR_REG(0x21);     //Display inversion
 221   1        LCD_WR_REG(0x29);     //Display on
 222   1        LCD_WR_REG(0x2A);     //Set Column Address
 223   1        LCD_WR_DATA8(0x00);   
 224   1        LCD_WR_DATA8(0x1A);  //26  
 225   1        LCD_WR_DATA8(0x00);   
 226   1        LCD_WR_DATA8(0x69);   //105 
 227   1        LCD_WR_REG(0x2B);     //Set Page Address
 228   1        LCD_WR_DATA8(0x00);   
 229   1        LCD_WR_DATA8(0x01);    //1
 230   1        LCD_WR_DATA8(0x00);   
 231   1        LCD_WR_DATA8(0xA0);    //160
 232   1        LCD_WR_REG(0x2C); 
 233   1      }
 234          
 235          
 236          
 237          
 238          
 239          
 240          
C51 COMPILER V9.60.7.0   LCD_INIT                                                          02/15/2023 04:59:37 PAGE 5   

 241          
*** WARNING C294 IN LINE 89 OF lcd_init.c: unreachable code
*** WARNING C294 IN LINE 99 OF lcd_init.c: unreachable code
*** WARNING C294 IN LINE 119 OF lcd_init.c: unreachable code
*** WARNING C294 IN LINE 219 OF lcd_init.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
