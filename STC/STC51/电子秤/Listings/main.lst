C51 COMPILER V9.60.0.0   MAIN                                                              07/23/2022 20:12:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\stm32\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8.h"
   2          #include <stdio.h>
   3          #include "delay.h"
   4          #include "OLED.h"
   5          
   6          sbit HX711_DOUT = P3^2;   //声明P3^2口接HX711数据线
   7          sbit HX711_SCK = P3^3;    //声明P3^3口接HX711时钟线
   8          sbit LED = P5^4;
   9          
  10          unsigned int HX711_Read(void);
  11          
  12          unsigned int HX711_Mean(void);
  13          
  14          void InitUART(void);
  15          
  16          void UART1_SendData(char dat);
  17          
  18          void main(void)
  19          {
  20   1        unsigned int ad=0;
  21   1        
  22   1        float Mweight = 0;
  23   1        float weight = 0;
  24   1        
  25   1        char i = 0 ;
  26   1        
  27   1        char buf[16]={0};
  28   1        
  29   1        P3M0 = 0x00;
  30   1        P3M1 = 0x00;
  31   1        P5M0 = 0x00;
  32   1        P5M1 = 0x00;
  33   1        
  34   1        oled_init();
  35   1        
  36   1        oled_screen_init();
  37   1        
  38   1        for(i=0;i<2;i++)
  39   1        {
  40   2          ad=HX711_Mean();
  41   2        
  42   2          Mweight = (float)ad/0.4;
  43   2          
  44   2        }
  45   1        
  46   1        sprintf(buf,"weight = %5.1f g",(float)weight);
  47   1        oled_write_size_16x8(0,0,buf);
  48   1        sprintf(buf,"weight = %4.1f kg",(float)weight);
  49   1        oled_write_size_16x8(0,2,buf);
  50   1        oled_write_size_16x8(0,4,"FS : 20 kg");
  51   1        
  52   1        while(1)
  53   1        {
  54   2          
C51 COMPILER V9.60.0.0   MAIN                                                              07/23/2022 20:12:13 PAGE 2   

  55   2          ad=HX711_Mean();
  56   2          
  57   2          //weight = (unsigned int)((float)ad/207374.1824);
  58   2          weight = Mweight - ((float)ad/0.4);
  59   2          
  60   2          if(weight>1000)
  61   2          {
  62   3            oled_write_size_16x8(0,0,"weight = >1000 g");
  63   3            sprintf(buf,"weight = %4.1f kg",(float)(weight/1000.));
  64   3            oled_write_size_16x8(0,2,buf);
  65   3            
  66   3          }else
  67   2          {
  68   3            sprintf(buf,"weight = %5.1f g",(float)weight);
  69   3            oled_write_size_16x8(0,0,buf);
  70   3            sprintf(buf,"weight = %4.1f kg",(float)(weight/1000.));
  71   3            oled_write_size_16x8(0,2,buf);
  72   3          }
  73   2          
  74   2        }
  75   1        
  76   1      }
  77          
  78          unsigned int HX711_Read(void)
  79          {
  80   1        unsigned long count;  //存ad值
  81   1        unsigned char i; 
  82   1        
  83   1        HX711_DOUT = 1;       //数据端口拉高，参照时序图写
  84   1        HX711_SCK = 0;                
  85   1        count = 0;
  86   1        while(HX711_DOUT);
  87   1        
  88   1        for(i=0; i<24; i++)   //循环24次传数据，按位接收数据
  89   1        { 
  90   2            HX711_SCK = 1;    //准备转换数据
  91   2            delay_07us(2);//1us
  92   2            count = count << 1;   //向左移位，即向低位补0，空出最低位进行传值操作，如1<<1为20
  93   2            HX711_SCK = 0;    //时钟脉冲下降延，数据开始转换
  94   2            delay_07us(2);//1us
  95   2            if(HX711_DOUT)
  96   2            count++;    //数据端为高则最低位+1，为1，数据端为低则最低位不变，为0（左移把最低位空出）
  97   2        } 
  98   1        HX711_SCK = 1;    //第25个脉冲延
  99   1        count = count^0x800000;   //异或输出原码
 100   1        count = count>>8;   //异或输出原码
 101   1        delay_07us(2);//1us
 102   1        HX711_SCK = 0;    //结束ad转换
 103   1        delay_07us(2);//1us
 104   1        return(count);    //传出ad值
 105   1      }
 106          
 107          unsigned int HX711_Mean(void)
 108          {
 109   1        unsigned int adMean=0,adMax=0,adMin=0;
 110   1        
 111   1        unsigned int ads[20] = {0};
 112   1        
 113   1        char i = 0,j = 0;
 114   1        
 115   1        for(i=0;i<20;i++)
 116   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              07/23/2022 20:12:13 PAGE 3   

 117   2          ads[i] = HX711_Read();
 118   2        }
 119   1        
 120   1        adMax = ads[0];
 121   1        adMin = ads[0];
 122   1        
 123   1        for(j=0;j<4;j++)
 124   1        {
 125   2          for(i=0;i<20;i++)
 126   2          {
 127   3            if(ads[i]!=0)
 128   3            {
 129   4              if(ads[i]>adMax)
 130   4              {
 131   5                adMax = ads[i];
 132   5              }
 133   4              
 134   4              if(ads[i]<adMin)
 135   4              {
 136   5                adMin = ads[i];
 137   5              }
 138   4            }
 139   3          }
 140   2          
 141   2          for(i=0;i<20;i++)
 142   2          {
 143   3            if(ads[i]==adMax)
 144   3            {
 145   4              ads[i] = 0;
 146   4              break;
 147   4            }
 148   3            
 149   3          }
 150   2          
 151   2          for(i=0;i<20;i++)
 152   2          {
 153   3            if(ads[i]==adMin)
 154   3            {
 155   4              ads[i] = 0;
 156   4              break;
 157   4            }
 158   3          }
 159   2          
 160   2          for(i=0;i<20;i++)
 161   2          {
 162   3            if(ads[i]!=0)
 163   3            {
 164   4              adMax = ads[i];
 165   4              adMin = ads[i];
 166   4              break;
 167   4            }
 168   3          }
 169   2          
 170   2        }
 171   1        
 172   1        for(i=0;i<20;i++)
 173   1        {
 174   2          adMean = adMean + ads[i];
 175   2        }
 176   1        
 177   1        adMean = adMean/12;
 178   1        
C51 COMPILER V9.60.0.0   MAIN                                                              07/23/2022 20:12:13 PAGE 4   

 179   1        return adMean;
 180   1        
 181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1014    ----
   CONSTANT SIZE    =    119    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      80
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
