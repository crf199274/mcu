C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\software\keil5_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "ws2812.h"
   2          #include "color.h"
   3          #include "string.h"
   4          
   5          void delay_ms(int i);
   6          void RCC_INIT(void);
   7          void IO_INIT(void);
   8          void TM0_INIT(void);
   9          void TM1_INIT(void);
  10          void TM2_INIT(void);
  11          void LightCubeType0(void);
  12          void LightCubeType1(void);
  13          void LightCubeType2(void);
  14          void LightCubeType3(void);
  15          void LightCubeType4(void);
  16          void LightCubeType5(void);
  17          void LightCubeType6(void);
  18          void LightCubeType7(void);
  19          void LightCubeType8(void);
  20          void LightCubeType9(void);
  21          void LightCubeType10(void);
  22          void LightStatus(void);
  23          void LightStatusAll(void);
  24          
  25          char flag1 = 0;
  26          char flag2 = 0;
  27          int time_cnt = 0;
  28          int keyT_cnt = 0;
  29          char key = 125;
  30          char status = 0;
  31          sbit key0 = P1^1;
  32          sbit key1 = P3^7;
  33          //sbit key2 = P1^0;
  34          sbit key3 = P3^6;
  35          
  36          void main()
  37          {
  38   1        RCC_INIT();
  39   1        IO_INIT();
  40   1        delay_ms(100);
  41   1        TM0_INIT();
  42   1        TM1_INIT();
  43   1        TM2_INIT();
  44   1        ws2812b_INIT();
  45   1        
  46   1        delay_ms(100);
  47   1        
  48   1        LightCubeType0();
  49   1        
  50   1        while(1)
  51   1        {   
  52   2          switch(key)
  53   2          {
  54   3            case 0: LightStatusAll();break;
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 2   

  55   3            case 1:LightStatus();break;
  56   3      //      case 2:LightStatus();break;
  57   3            default : break;
  58   3          }
  59   2        }
  60   1      }
  61          
  62          void RCC_INIT(void)
  63          {
  64   1         //选择24MHz
  65   1          P_SW2 = 0x80;
  66   1          CLKDIV = 0x04;
  67   1          IRTRIM = T24M_ROMADDR;
  68   1          VRTRIM = VRT20M_ROMADDR;
  69   1          IRCBAND = 0x00;
  70   1          CLKDIV = 0x00;
  71   1      }
  72          
  73          void IO_INIT(void)
  74          {
  75   1        P0M0 = 0x00;
  76   1        P0M1 = 0x00;
  77   1        P1M0 = 0x00;
  78   1        P1M1 = 0x00;
  79   1        P2M0 = 0x00;
  80   1        P2M1 = 0x00;
  81   1        P3M0 = 0x00;
  82   1        P3M1 = 0x00;
  83   1        P4M0 = 0x00;
  84   1        P4M1 = 0x00;
  85   1        P5M0 = 0x00;
  86   1        P5M1 = 0x00;
  87   1        
  88   1        key0 = 1;
  89   1        key1 = 1;
  90   1        key3 = 1;
  91   1        
  92   1      }
  93          
  94          void TM0_INIT(void)//1ms
  95          {
  96   1        TMOD = 0x00;                                //模式0
  97   1        TL0 = 0x30;                                 //65536-11.0592M/12/1000
  98   1        TH0 = 0xF8;
  99   1      //  TR0 = 1;                                    //启动定时器
 100   1        ET0 = 1;                                    //使能定时器中断
 101   1      //  EA = 1;
 102   1      }
 103          
 104          void TM1_INIT(void)
 105          {
 106   1        TMOD = 0x00;                                //模式0
 107   1        TL1 = 0x30;                                 //65536-11.0592M/12/1000
 108   1        TH1 = 0xF8;
 109   1      //  TR1 = 1;                                    //启动定时器
 110   1        ET1 = 1;                                    //使能定时器中断
 111   1        EA = 1;
 112   1      }
 113          
 114          void TM2_INIT(void)
 115          {
 116   1        T2L = 0x30;                                 //65536-11.0592M/12/1000
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 3   

 117   1        T2H = 0xF8;
 118   1        AUXR = 0x10;                                //启动定时器
 119   1        IE2 = ET2;                                  //使能定时器中断
 120   1        EA = 1;
 121   1      }
 122          
 123          void LightCubeType0(void)
 124          {
 125   1        char i = 0;
 126   1        WsColor Type1Color={0x00,0x00,0x00};
 127   1        for(i=0;i<125;i++)
 128   1        {
 129   2          ws2812bWriteAColor(Type1Color);
 130   2        }
 131   1        delay_ms(1);
 132   1      }
 133          
 134          void LightCubeType1(void)
 135          {
 136   1        char i = 0,j = 1;
 137   1        char num = 1;
 138   1        WsColor Type1Color={0x00,0x00,0xff};
 139   1        WsColor LightsOut={0x00,0x00,0x00};
 140   1        for(i=0;i<125;i++)
 141   1        {
 142   2          for(j=1;j<126;j++)
 143   2          {
 144   3            if(j==num)
 145   3              ws2812bWriteAColor(Type1Color);
 146   3            else
 147   3              ws2812bWriteAColor(LightsOut);
 148   3          }
 149   2          num++;
 150   2          delay_ms(100);
 151   2        }
 152   1      }
 153          
 154          void LightCubeType2(void)
 155          {
 156   1        char i = 0;
 157   1        WsColor Type1Color={0x00,0x00,0xff};
 158   1        for(i=0;i<125;i++)
 159   1        {
 160   2          ws2812bWriteAColor(Type1Color);
 161   2        }
 162   1        delay_ms(500);
 163   1      }
 164          
 165          void LightCubeType3(void)
 166          {
 167   1        char i = 0,j = 0,k = 0;
 168   1        char num = 0;
 169   1        WsColor Type1Color={0x00,0x00,0xff};
 170   1        WsColor LightsOut={0x00,0x00,0x00};
 171   1        for(k=0;k<3;k++)
 172   1        {
 173   2          switch(num)
 174   2          {
 175   3            case 0:
 176   3              num++;
 177   3              for(i = 0;i<5;i++)
 178   3              {
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 4   

 179   4                for(j=1;j<26;j++)
 180   4                {
 181   5                  if(j<=5||j>=20)
 182   5                    ws2812bWriteAColor(Type1Color);
 183   5                  else
 184   5                    ws2812bWriteAColor(LightsOut);
 185   5                }
 186   4              }
 187   3              break;
 188   3            case 1:
 189   3              num++;
 190   3              for(i = 0;i<5;i++)
 191   3              {
 192   4                for(j=1;j<26;j++)
 193   4                {
 194   5                  if(j==1||j==10||j==11||j==20||j==21||j==5||j==6||j==15||j==16||j==25)
 195   5                    ws2812bWriteAColor(Type1Color);
 196   5                  else
 197   5                    ws2812bWriteAColor(LightsOut);
 198   5                }
 199   4              }
 200   3              break;
 201   3            case 2:
 202   3              num=0;
 203   3              for(i=1;i<126;i++)
 204   3              {
 205   4                if(i<=25||i>=100)
 206   4                  ws2812bWriteAColor(Type1Color);
 207   4                else
 208   4                  ws2812bWriteAColor(LightsOut);
 209   4              }
 210   3              break;
 211   3          }
 212   2          delay_ms(500);
 213   2        }
 214   1        
 215   1      }
 216          
 217          void LightCubeType4(void)
 218          {
 219   1        char i = 0,j = 1,k = 0;
 220   1        char num = 0;
 221   1        WsColor Type1Color={0x00,0x00,0xff};
 222   1        WsColor LightsOut={0x00,0x00,0x00};
 223   1        for(k=0;k<5;k++)
 224   1        {
 225   2          for(i=0;i<5;i++)
 226   2          {
 227   3            for(j=1;j<26;j++)
 228   3            {
 229   4              if((i<=num)&&(j==1||j==5||j==21||j==25))
 230   4                ws2812bWriteAColor(Type1Color);
 231   4              else if((j>=7&&j<=9)||(j>=12&&j<=14)||(j>=17&&j<=19))
 232   4                ws2812bWriteAColor(Type1Color);
 233   4              else
 234   4                ws2812bWriteAColor(LightsOut);
 235   4            }
 236   3          }
 237   2          num++;
 238   2          delay_ms(200);
 239   2        }
 240   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 5   

 241          
 242          void LightCubeType5(void)
 243          {
 244   1        char i = 0,j = 0;
 245   1        WsColor Type1Color={0x00,0x00,0xff};
 246   1        WsColor LightsOut={0x00,0x00,0x00};
 247   1        for(j=0;j<3;j++)
 248   1        {
 249   2          //1
 250   2          for(i=1;i<26;i++)
 251   2          {
 252   3            if(i==3||i==7||i==9||i==11||i==15||i==17||i==19||i==23)
 253   3              ws2812bWriteAColor(Type1Color);
 254   3            else
 255   3              ws2812bWriteAColor(LightsOut);
 256   3          }
 257   2          //2
 258   2          for(i=1;i<26;i++)
 259   2          {
 260   3            if(i==2||i==4||i==6||i==10||i==16||i==20||i==22||i==24)
 261   3              ws2812bWriteAColor(Type1Color);
 262   3            else
 263   3              ws2812bWriteAColor(LightsOut);
 264   3          }
 265   2          //3
 266   2          for(i=1;i<26;i++)
 267   2          {
 268   3            if(i==1||i==5||i==21||i==25)
 269   3              ws2812bWriteAColor(Type1Color);
 270   3            else
 271   3              ws2812bWriteAColor(LightsOut);
 272   3          }
 273   2          //4
 274   2          for(i=1;i<26;i++)
 275   2          {
 276   3            if(i==2||i==4||i==6||i==10||i==16||i==20||i==22||i==24)
 277   3              ws2812bWriteAColor(Type1Color);
 278   3            else
 279   3              ws2812bWriteAColor(LightsOut);
 280   3          }
 281   2          //5
 282   2          for(i=1;i<26;i++)
 283   2          {
 284   3            if(i==3||i==7||i==9||i==11||i==15||i==17||i==19||i==23)
 285   3              ws2812bWriteAColor(Type1Color);
 286   3            else
 287   3              ws2812bWriteAColor(LightsOut);
 288   3          }
 289   2          delay_ms(500);
 290   2          //1
 291   2          for(i=1;i<26;i++)
 292   2          {
 293   3            if(i==8||i==12||i==14||i==18)
 294   3              ws2812bWriteAColor(Type1Color);
 295   3            else
 296   3              ws2812bWriteAColor(LightsOut);
 297   3          }
 298   2          //2
 299   2          for(i=1;i<26;i++)
 300   2          {
 301   3            if(i==3||i==11||i==15||i==23)
 302   3              ws2812bWriteAColor(Type1Color);
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 6   

 303   3            else
 304   3              ws2812bWriteAColor(LightsOut);
 305   3          }
 306   2          //3
 307   2          for(i=1;i<26;i++)
 308   2          {
 309   3            if(i==2||i==4||i==6||i==10||i==16||i==20||i==22||i==24)
 310   3              ws2812bWriteAColor(Type1Color);
 311   3            else
 312   3              ws2812bWriteAColor(LightsOut);
 313   3          }
 314   2          //4
 315   2          for(i=1;i<26;i++)
 316   2          {
 317   3            if(i==3||i==11||i==15||i==23)
 318   3              ws2812bWriteAColor(Type1Color);
 319   3            else
 320   3              ws2812bWriteAColor(LightsOut);
 321   3          }
 322   2          //5
 323   2          for(i=1;i<26;i++)
 324   2          {
 325   3            if(i==8||i==12||i==14||i==18)
 326   3              ws2812bWriteAColor(Type1Color);
 327   3            else
 328   3              ws2812bWriteAColor(LightsOut);
 329   3          }
 330   2          delay_ms(500);
 331   2        }
 332   1      }
 333          
 334          void LightCubeType6(void)
 335          {
 336   1        char i=0,j=0,k=0;
 337   1        for(k=0;k<30;k++)
 338   1        {
 339   2          for(i=0;i<5;i++)
 340   2          {
 341   3            if(i%2==0)
 342   3            {
 343   4              for(j=1;j<26;j++)
 344   4              {
 345   5                ws2812bWriteAColor(Type6[k*2]);
 346   5              }
 347   4            }
 348   3            else
 349   3            {
 350   4              for(j=1;j<26;j++)
 351   4              {
 352   5                ws2812bWriteAColor(Type6[k*2+1]);
 353   5              }
 354   4            }
 355   3          }
 356   2          delay_ms(500);
 357   2        }
 358   1      }
 359          
 360          void LightCubeType7(void)
 361          {
 362   1        char i=0,j=0,k=0;
 363   1        WsColor LightsOut={0x00,0x00,0x00};
 364   1        for(k=0;k<8;k++)
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 7   

 365   1        {
 366   2          for(i=0;i<5;i++)
 367   2          {
 368   3            for(j=1;j<26;j++)
 369   3            {
 370   4              switch(j)
 371   4              {
 372   5                case 1:ws2812bWriteAColor(Type6[k*5+4]);break;
 373   5                case 5:ws2812bWriteAColor(Type6[(k+1)*5+4]);break;
 374   5                case 13:ws2812bWriteAColor(Type6[(k+2)*5+4]);break;
 375   5                case 21:ws2812bWriteAColor(Type6[(k+3)*5+4]);break;
 376   5                case 25:ws2812bWriteAColor(Type6[(k+4)*5+4]);break;
 377   5                default :ws2812bWriteAColor(LightsOut);break;
 378   5              }
 379   4            }
 380   3          }
 381   2          LightCube_Reset();
 382   2          delay_ms(500);
 383   2        }
 384   1      }
 385          
 386          void LightCubeType8_layer(char layer,char num,char color)
 387          {
 388   1        char i=0,j=0;
 389   1        WsColor LightsOut={0x00,0x00,0x00};
 390   1        if(num==1)
 391   1        {
 392   2          for(i=0;i<5;i++)
 393   2          {
 394   3            if(i==layer)
 395   3            {
 396   4              for(j=1;j<26;j++)
 397   4              {
 398   5                ws2812bWriteAColor(Type6[color*5+layer]);
 399   5              }
 400   4            }
 401   3            else
 402   3            {
 403   4              for(j=1;j<26;j++)
 404   4              {
 405   5                ws2812bWriteAColor(LightsOut);
 406   5              }
 407   4            }
 408   3          }
 409   2        }else if(num==2)
 410   1        {
 411   2          for(i=0;i<5;i++)
 412   2          {
 413   3            if(i==layer)
 414   3            {
 415   4              for(j=1;j<26;j++)
 416   4              {
 417   5                ws2812bWriteAColor(Type6[color*5+layer]);
 418   5              }
 419   4            }
 420   3            else if(i==(layer+1))
 421   3            {
 422   4              for(j=1;j<26;j++)
 423   4              {
 424   5                ws2812bWriteAColor(Type6[color*5+layer+1]);
 425   5              }
 426   4            }
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 8   

 427   3            else
 428   3            {
 429   4              for(j=1;j<26;j++)
 430   4              {
 431   5                ws2812bWriteAColor(LightsOut);
 432   5              }
 433   4            }
 434   3          }
 435   2        }
 436   1      }
 437          
 438          void LightCubeType8(void)
 439          {
 440   1        char i=0,j=0;
 441   1        time_cnt = 0;
 442   1        TR1 = 1;    //定时器1开始计时
 443   1        for(j=0;j<12;j++)
 444   1        {
 445   2          while(1)
 446   2          {
 447   3            for(i=0;i<3;i++)
 448   3            {
 449   4              switch(i)
 450   4              {
 451   5                case 0:LightCubeType8_layer(0,1,j);break;
 452   5                case 1:LightCubeType8_layer(1,2,j);break;
 453   5                case 2:LightCubeType8_layer(3,2,j);break;
 454   5              }
 455   4              LightCube_Reset();
 456   4            }
 457   3            if(flag1)
 458   3            {
 459   4              flag1 = 0;
 460   4              break;
 461   4            }
 462   3          }
 463   2        }
 464   1        TR1 = 0;    //定时器1停止计时
 465   1      }
 466          
 467          //char getHeadIndex(char head)
 468          //{
 469          //  char i=0;
 470          //  char head_element[16]={1,2,3,4,5,6,15,16,25,24,23,22,21,20,11,10};
 471          //  for (i=0; i<16; i++)
 472          //  {
 473          //      if (head_element[i]==head)
 474          //        return (i+1);
 475          //  }
 476          //}
 477          
 478          void getSnake(char * snake_list,char * snakeElementLayer,char snake_size)
 479          {
 480   1        char i=0;
 481   1        xdata char head_element[16]={1,2,3,4,5,6,15,16,25,24,23,22,21,20,11,10};
 482   1        if(snake_size<12)
 483   1        {
 484   2          snake_list[snake_size]=head_element[snake_size];
 485   2        }
 486   1        else
 487   1        {
 488   2          for(i=0;i<12;i++)
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 9   

 489   2          {
 490   3            switch(snake_list[i])
 491   3            {
 492   4              case 1:snake_list[i]=2;break;
 493   4              case 2:snake_list[i]=3;break;
 494   4              case 3:snake_list[i]=4;break;
 495   4              case 4:snake_list[i]=5;break;
 496   4              case 5:snake_list[i]=6;break;
 497   4              case 6:snake_list[i]=15;break;
 498   4              case 15:snake_list[i]=16;break;
 499   4              case 16:snake_list[i]=25;break;
 500   4              case 25:snake_list[i]=24;break;
 501   4              case 24:snake_list[i]=23;break;
 502   4              case 23:snake_list[i]=22;break;
 503   4              case 22:snake_list[i]=21;break;
 504   4              case 21:snake_list[i]=20;break;
 505   4              case 20:snake_list[i]=11;break;
 506   4              case 11:snake_list[i]=10;break;
 507   4              case 10:snake_list[i]=1;snakeElementLayer[i]=snakeElementLayer[i]+1;break;
 508   4            }
 509   3          }
 510   2        }
 511   1      }
 512          
 513          void LightCubeType9(void)
 514          {
 515   1        char i=0;
 516   1        char snake_size = 0;
 517   1        xdata char snakeElementLayer[12]={0};
 518   1        xdata char snake_list[12]={1};
 519   1        xdata char snake[12]={1};
 520   1        WsColor LightsOut={0x00,0x00,0x00};
 521   1        WsColor LightsOn={0xff,0xff,0xff};
 522   1        time_cnt = 0;
 523   1        TR0 = 1;    //定时器0开始计时
 524   1        while(1)
 525   1        {
 526   2          for(i=0;i<12;i++)
 527   2          {
 528   3            snake[i]=snakeElementLayer[i]*25+snake_list[i];
 529   3          }
 530   2          for(i=1;i<126;i++)
 531   2          {
 532   3            if(i==snake[0])
 533   3            {
 534   4              ws2812bWriteAColor(Type6[0*5+4]);
 535   4              continue;
 536   4            }
 537   3            else if(i==snake[1])
 538   3            {
 539   4              ws2812bWriteAColor(Type6[1*5+4]);
 540   4              continue;
 541   4            }
 542   3            else if(i==snake[2])
 543   3            {
 544   4              ws2812bWriteAColor(Type6[2*5+4]);
 545   4              continue;
 546   4            }
 547   3            else if(i==snake[3])
 548   3            {
 549   4              ws2812bWriteAColor(Type6[3*5+4]);
 550   4              continue;
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 10  

 551   4            }
 552   3            else if(i==snake[4])
 553   3            {
 554   4              ws2812bWriteAColor(Type6[4*5+4]);
 555   4              continue;
 556   4            }
 557   3            else if(i==snake[5])
 558   3            {
 559   4              ws2812bWriteAColor(Type6[5*5+4]);
 560   4              continue;
 561   4            }
 562   3            else if(i==snake[6])
 563   3            {
 564   4              ws2812bWriteAColor(Type6[6*5+4]);
 565   4              continue;
 566   4            }
 567   3            else if(i==snake[7])
 568   3            {
 569   4              ws2812bWriteAColor(Type6[7*5+4]);
 570   4              continue;
 571   4            }
 572   3            else if(i==snake[8])
 573   3            {
 574   4              ws2812bWriteAColor(Type6[8*5+4]);
 575   4              continue;
 576   4            }
 577   3            else if(i==snake[9])
 578   3            {
 579   4              ws2812bWriteAColor(Type6[9*5+4]);
 580   4              continue;
 581   4            }
 582   3            else if(i==snake[10])
 583   3            {
 584   4              ws2812bWriteAColor(Type6[10*5+4]);
 585   4              continue;
 586   4            }
 587   3            else if(i==snake[11])
 588   3            {
 589   4              ws2812bWriteAColor(Type6[11*5+4]);
 590   4              continue;
 591   4            }
 592   3            switch(i)
 593   3            {
 594   4      //        case 7:ws2812bWriteAColor(LightsOn);continue;break;
 595   4      //        case 8:ws2812bWriteAColor(LightsOn);continue;break;
 596   4      //        case 9:ws2812bWriteAColor(LightsOn);continue;break;
 597   4      //        case 12:ws2812bWriteAColor(LightsOn);continue;break;
 598   4      //        case 13:ws2812bWriteAColor(LightsOn);continue;break;
 599   4      //        case 14:ws2812bWriteAColor(LightsOn);continue;break;
 600   4      //        case 17:ws2812bWriteAColor(LightsOn);continue;break;
 601   4      //        case 18:ws2812bWriteAColor(LightsOn);continue;break;
 602   4      //        case 19:ws2812bWriteAColor(LightsOn);continue;break;
 603   4              
 604   4              case 7+25:ws2812bWriteAColor(LightsOn);continue;break;
 605   4              case 8+25:ws2812bWriteAColor(LightsOn);continue;break;
 606   4              case 9+25:ws2812bWriteAColor(LightsOn);continue;break;
 607   4              case 12+25:ws2812bWriteAColor(LightsOn);continue;break;
 608   4              case 13+25:ws2812bWriteAColor(LightsOn);continue;break;
 609   4              case 14+25:ws2812bWriteAColor(LightsOn);continue;break;
 610   4              case 17+25:ws2812bWriteAColor(LightsOn);continue;break;
 611   4              case 18+25:ws2812bWriteAColor(LightsOn);continue;break;
 612   4              case 19+25:ws2812bWriteAColor(LightsOn);continue;break;
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 11  

 613   4              
 614   4              case 7+50:ws2812bWriteAColor(LightsOn);continue;break;
 615   4              case 8+50:ws2812bWriteAColor(LightsOn);continue;break;
 616   4              case 9+50:ws2812bWriteAColor(LightsOn);continue;break;
 617   4              case 12+50:ws2812bWriteAColor(LightsOn);continue;break;
 618   4              case 13+50:ws2812bWriteAColor(LightsOn);continue;break;
 619   4              case 14+50:ws2812bWriteAColor(LightsOn);continue;break;
 620   4              case 17+50:ws2812bWriteAColor(LightsOn);continue;break;
 621   4              case 18+50:ws2812bWriteAColor(LightsOn);continue;break;
 622   4              case 19+50:ws2812bWriteAColor(LightsOn);continue;break;
 623   4              
 624   4              case 7+75:ws2812bWriteAColor(LightsOn);continue;break;
 625   4              case 8+75:ws2812bWriteAColor(LightsOn);continue;break;
 626   4              case 9+75:ws2812bWriteAColor(LightsOn);continue;break;
 627   4              case 12+75:ws2812bWriteAColor(LightsOn);continue;break;
 628   4              case 13+75:ws2812bWriteAColor(LightsOn);continue;break;
 629   4              case 14+75:ws2812bWriteAColor(LightsOn);continue;break;
 630   4              case 17+75:ws2812bWriteAColor(LightsOn);continue;break;
 631   4              case 18+75:ws2812bWriteAColor(LightsOn);continue;break;
 632   4              case 19+75:ws2812bWriteAColor(LightsOn);continue;break;
 633   4              
 634   4      //        case 7+100:ws2812bWriteAColor(LightsOn);continue;break;
 635   4      //        case 8+100:ws2812bWriteAColor(LightsOn);continue;break;
 636   4      //        case 9+100:ws2812bWriteAColor(LightsOn);continue;break;
 637   4      //        case 12+100:ws2812bWriteAColor(LightsOn);continue;break;
 638   4      //        case 13+100:ws2812bWriteAColor(LightsOn);continue;break;
 639   4      //        case 14+100:ws2812bWriteAColor(LightsOn);continue;break;
 640   4      //        case 17+100:ws2812bWriteAColor(LightsOn);continue;break;
 641   4      //        case 18+100:ws2812bWriteAColor(LightsOn);continue;break;
 642   4      //        case 19+100:ws2812bWriteAColor(LightsOn);continue;break;
 643   4            }
 644   3            ws2812bWriteAColor(LightsOut);
 645   3          }
 646   2          LightCube_Reset();
 647   2          if(snake_size<12)
 648   2            snake_size++;
 649   2          if(snake_list[11]==10&&snakeElementLayer[11]==4)
 650   2            break;
 651   2          getSnake(snake_list,snakeElementLayer,snake_size);
 652   2          while(flag2==0);
 653   2          flag2=0;
 654   2        }
 655   1        TR0 = 0;    //定时器0停止计时
 656   1      }
 657          
 658          void LightCubeType10(void)
 659          {
 660   1        char i = 0,j = 1,k = 0,n=0;
 661   1        char num = 0;
 662   1      //  WsColor Type1Color={0x00,0x00,0xff};
 663   1        WsColor LightsOut={0x00,0x00,0x00};
 664   1        for(n=0;n<12;n++)
 665   1        {
 666   2          for(k=0;k<5;k++)
 667   2          {
 668   3            for(i=0;i<5;i++)
 669   3            {
 670   4              for(j=1;j<26;j++)
 671   4              {
 672   5                if((i<=num)&&(j==1||j==5||j==21||j==25))
 673   5                  ws2812bWriteAColor(Type6[n*5+4]);
 674   5                else if((j>=7&&j<=9)||(j>=12&&j<=14)||(j>=17&&j<=19))
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 12  

 675   5                  ws2812bWriteAColor(Type6[n*5+4]);
 676   5                else
 677   5                  ws2812bWriteAColor(LightsOut);
 678   5              }
 679   4            }
 680   3            num++;
 681   3            delay_ms(200);
 682   3          }
 683   2          num=0;
 684   2          delay_ms(500);
 685   2        }
 686   1      }
 687          
 688          void LightStatusAll(void)
 689          {
 690   1        while(1)
 691   1        {
 692   2          LightCubeType1();
 693   2          LightCubeType2();
 694   2          LightCubeType3();
 695   2          LightCubeType4();
 696   2          LightCubeType5();
 697   2          LightCubeType9();
 698   2          LightCubeType7();
 699   2          LightCubeType10();
 700   2          LightCubeType6();
 701   2          LightCubeType8();
 702   2        }
 703   1      }
 704          
 705          void LightStatusSEL(WsColor wsColor)
 706          {
 707   1        char i=0;
 708   1        for(i=0;i<125;i++)
 709   1        {
 710   2          ws2812bWriteAColor(wsColor);
 711   2        }
 712   1        LightCube_Reset();
 713   1      }
 714          
 715          void LightStatus(void)
 716          {
 717   1        status++;
 718   1        key = -1;
 719   1        
 720   1        while(1)
 721   1        {
 722   2          switch(status)
 723   2          {
 724   3            case 1: LightStatusSEL(Type6[0*5+4]);break;
 725   3            case 2: LightStatusSEL(Type6[1*5+4]);break;
 726   3            case 3: LightStatusSEL(Type6[2*5+4]);break;
 727   3            case 4: LightStatusSEL(Type6[3*5+4]);break;
 728   3            case 5: LightStatusSEL(Type6[4*5+4]);break;
 729   3            case 6: LightStatusSEL(Type6[5*5+4]);break;
 730   3            case 7: LightStatusSEL(Type6[6*5+4]);break;
 731   3            case 8: LightStatusSEL(Type6[7*5+4]);break;
 732   3            case 9: LightStatusSEL(Type6[8*5+4]);break;
 733   3            case 10: LightStatusSEL(Type6[9*5+4]);break;
 734   3            case 11: LightStatusSEL(Type6[10*5+4]);break;
 735   3            case 12: LightStatusSEL(Type6[11*5+4]);break;
 736   3          }
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 13  

 737   2          while(key=='0'||key=='1'||key=='3');
 738   2          if(key==1)
 739   2          {
 740   3            status++;
 741   3            key = -1;
 742   3          }
 743   2          else if(key==0||key==3)
 744   2            break;
 745   2          if(status>=13)
 746   2            status = 1;
 747   2        }
 748   1      }
 749          
 750          char getKeyValue(void)
 751          {
 752   1        if(!key0)
 753   1        {
 754   2          while(key0==0);
 755   2          return 0;
 756   2        }
 757   1        else if(!key1)
 758   1        {
 759   2          while(key1==0);
 760   2          if(key==0||key=='0')
 761   2            IAP_CONTR |= 0x60;
 762   2          else
 763   2            return 1;
 764   2        }
 765   1        else if(!key3)
 766   1        {
 767   2          while(key3==0);
 768   2          return 3;
 769   2        }
 770   1        else
 771   1        {
 772   2          if(key==0||key=='0')
 773   2            return '0';
 774   2          else if(key==1||key=='1')
 775   2            return '1';
 776   2          else if(key==3||key=='3')
 777   2            return '3';
 778   2        }
 779   1        
 780   1      }
 781          
 782          void Delay100us()       //@24.000MHz
 783          {
 784   1          unsigned char i, j;
 785   1      
 786   1          i = 3;
 787   1          j = 82;
 788   1          do
 789   1          {
 790   2              while (--j);
 791   2          } while (--i);
 792   1      }
 793          
 794          void delay_1ms()
 795          {
 796   1        int i = 10;
 797   1        while(i--)
 798   1        {
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 23:05:23 PAGE 14  

 799   2          Delay100us();
 800   2        }
 801   1      }
 802          
 803          void delay_ms(int i)
 804          {
 805   1        while(i--)
 806   1        {
 807   2          delay_1ms();
 808   2        }
 809   1      }
 810          
 811          void TM0_Isr() interrupt 1
 812          {
 813   1        time_cnt++;
 814   1      //  TL0 = 0x30;   //设置定时初始值
 815   1      //  TH0 = 0xF8;   //设置定时初始值
 816   1        if(time_cnt>=75)
 817   1        {
 818   2          time_cnt = 0;
 819   2          flag2 = 1;
 820   2        }
 821   1      }
 822          
 823          void TM1_Isr() interrupt 3
 824          {
 825   1        time_cnt++;
 826   1      //  TL1 = 0x30;   //设置定时初始值
 827   1      //  TH1 = 0xF8;   //设置定时初始值
 828   1        if(time_cnt>=500)
 829   1        {
 830   2          time_cnt = 0;
 831   2          flag1 = 1;
 832   2        }
 833   1        
 834   1      }
 835          
 836          void TM2_Isr() interrupt 12
 837          {
 838   1        EA = 0;
 839   1        keyT_cnt++;
 840   1        if(keyT_cnt>=50)
 841   1        {
 842   2          keyT_cnt = 0;
 843   2          key = getKeyValue();
 844   2        }
 845   1        EA = 1;
 846   1      }
*** WARNING C291 IN LINE 780 OF main.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4872    ----
   CONSTANT SIZE    =    277    ----
   XDATA SIZE       =   ----      52
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      92
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
